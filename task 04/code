import logging
import requests
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackContext

# Replace with actual API keys
TELEGRAM_BOT_TOKEN = 'API'
GOOGLE_BOOKS_API_KEY = 'API'

# Initialize logging
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# Function to fetch books from Google Books API
def get_books_by_genre(genre):
    url = f"https://www.googleapis.com/books/v1/volumes?q=subject:{genre}&key={GOOGLE_BOOKS_API_KEY}"
    response = requests.get(url)
    return response.json().get('items', []) if response.status_code == 200 else []

# Command handler for /start
async def start(update: Update, context: CallbackContext):
    await update.message.reply_text("Welcome to PagePal! Type /recommend <genre> to get book recommendations.")

# Command handler for /recommend
async def recommend(update: Update, context: CallbackContext):
    if len(context.args) == 0:
        await update.message.reply_text("Please provide a genre. Example: /recommend fiction")
        return

    genre = " ".join(context.args)
    books = get_books_by_genre(genre)

    if not books:
        await update.message.reply_text(f"No books found for genre: {genre}")
        return

    for book in books[:5]:
        title = book['volumeInfo'].get('title', 'No title')
        authors = ", ".join(book['volumeInfo'].get('authors', 'Unknown author'))
        description = book['volumeInfo'].get('description', 'No description available')
        published_date = book['volumeInfo'].get('publishedDate', 'Unknown year')
        language = book['volumeInfo'].get('language', 'Unknown language')
        preview_link = book['volumeInfo'].get('previewLink', 'No preview available')

        message = f"ðŸ“– *{title}*\nAuthor(s): {authors}\nPublished: {published_date}\nLanguage: {language}\n\n{description}\n[Preview Book]({preview_link})"
        await update.message.reply_text(message, parse_mode='Markdown')

# Set up the application
if __name__ == '__main__':
    app = ApplicationBuilder().token(TELEGRAM_BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("recommend", recommend))
    app.run_polling()
